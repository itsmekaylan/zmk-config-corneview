/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        RETURN_THUMBS {
            bindings = <&kp RETURN>;
            key-positions = <38 39>;
            layers = <0>;
            timeout-ms = <200>;
        };

        ALT_TAB_COMBO {
            bindings = <&kp LA(TAB)>;
            key-positions = <25 34>;
            timeout-ms = <200>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R      &kp T        &kp Y     &kp U           &kp I      &kp O    &kp P             &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D  &kp F      &kp G        &kp H     &kp J           &kp K      &kp L    &kp SEMI          &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V      &kp B        &kp N     &kp M           &kp COMMA  &kp DOT  &kp LEFT_CONTROL  &kp ESC
                         &mo 1  &kp LCTRL  &kp SPACE    &kp BSPC  &kp LEFT_SHIFT  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp TAB         &kp N2          &kp N3           &kp N4        &kp N5          &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS      &kp N0     &kp BSPC
&bt BT_CLR  &kp DEL         &kp UP_ARROW    &kp LG(LS(S))    &bt BT_SEL 3  &bt BT_SEL 4    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS  &kp LC(C)  &trans
&kp LSHFT   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans        &trans          &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_EQUAL  &kp LC(V)  &trans
                                            &kp LGUI         &kp TAB       &kp SPACE       &kp RET          &kp KP_NUMBER_0  &kp LEFT_GUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL   &kp AT                &kp HASH               &kp DLLR          &kp PRCNT          &kp CARET  &kp AMPS           &kp KP_MULTIPLY  &kp LPAR          &kp TAB       &kp BSPC
&kp LCTRL  &kp TILDE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp GRAVE  &kp APOS           &kp KP_SLASH     &kp BACKSLASH     &kp COLON     &kp GRAVE
&kp LSHFT  &kp CARET  &kp PIPE              &kp SEMI               &kp LEFT_BRACKET  &kp RBKT           &kp UNDER  &kp DOUBLE_QUOTES  &kp LESS_THAN    &kp GREATER_THAN  &kp QUESTION  &kp TILDE
                                            &kp ESCAPE             &kp TAB           &kp SPACE          &kp RET    &kp LEFT_SHIFT     &kp RALT
            >;
        };
    };
};